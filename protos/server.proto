syntax = "proto3";

// The greeting service definition.
service Greeter {
  rpc signUp (AuthRequest) returns (AuthReply) {}
  rpc signIn (AuthRequest) returns (AuthReply) {}
  rpc changePassword (ChangePasswordRequest) returns (ChangePasswordReply) {}
  rpc createQuestion (QuestionCreateProto) returns (QuestionCreateProtoResult){}
  rpc getQuestion (QuestionGetProto) returns (QuestionGetProtoReply){}
  rpc getIdQuestion (QuestionIdGetProto) returns (QuestionCreateProto){}
  rpc getResultTest (GetResultRequest) returns (QuestionResultProto){}
}

message AuthRequest{
  AccountProto account = 1;
}

message AuthReply{
  bool result = 1;
}

message ChangePasswordRequest{
  AccountProto account = 1;
  string newPassowrd = 2;
}

message ChangePasswordReply{
  bool checkOldPassword= 1;
  bool result = 2;
}

message AccountProto {
  string login = 1;
  string password = 2;
}

message AnswerProto{
  string answer = 1;
  string score = 2;
  string result = 3;
  bool isEnd = 4;
}

message QuestionPageProto{
  string question = 1;
  repeated AnswerProto listAnswers = 2;
}

message QuestionDescriptionProto{
  string title = 1;
  string description = 2;
  string date = 3;
  string author = 4;
  double rating = 5;
  int64 countPasses = 6;
  string id = 7;
}

message QuestionCreateProto{
  AccountProto account = 1;
  QuestionDescriptionProto description = 2;
  repeated QuestionPageProto questionPageProto = 3;
  repeated string listResult = 4;
}
message QuestionCreateProtoResult{
  bool created = 1;
}

message QuestionResultProto{
  repeated VariantAndStats variants = 1;
  string sumCount = 3;
  string scoreSum = 4;
  string scoreCount = 5;
}

message QuestionGetProto{
}

message QuestionGetProtoReply{
  repeated QuestionDescriptionProto questionDescriptionProto = 1;
}

message QuestionIdGetProto{
  string id = 1;
}

message GetResultRequest{
  string result = 1;
  string score = 2;
  string id = 3;
}

message VariantAndStats{
  string variant = 1;
  string stats = 2;
}